[user]
	name = MH4GF
	email = h.miyagi.cnw@gmail.com
[alias]
	cma = commit --amend
	co = "!f() { [ $# -eq 0 ] && git checkout $(git branch --sort=-authordate | perl -a -nle '$F[0] ne \"*\" and print $F[0]' | peco) || git checkout $@; }; f"
	com = "!f() { remote_head=$(git symbolic-ref --quiet refs/remotes/origin/HEAD); remote_head=${remote_head#refs/remotes/origin/}; git checkout ${remote_head:-$(git rev-parse --symbolic --verify --quiet main || git rev-parse --symbolic --verify --quiet master)}; git pull; git branch --merged | grep -v \"*\" | xargs -I % git branch -d %; }; f"
	comw = "!f() { \
		remote_head=$(git symbolic-ref --quiet refs/remotes/origin/HEAD); \
		remote_head=${remote_head#refs/remotes/origin/}; \
		main_branch=${remote_head:-$(git rev-parse --symbolic --verify --quiet main || git rev-parse --symbolic --verify --quiet master)}; \
		git checkout $main_branch; \
		git pull; \
		merged_branches=$(git branch --merged | grep -v \"*\" | grep -v \"origin/\" | sed 's/^[+ ]*//' | tr -d ' '); \
		git worktree list | tail -n +2 | while read path hash branch; do \
			branch_name=$(echo $branch | tr -d '[]'); \
			if echo \"$merged_branches\" | grep -q \"^$branch_name$\"; then \
				git worktree remove \"$path\" 2>/dev/null || true; \
			fi; \
		done; \
		git branch --merged | grep -v \"*\" | grep -v \"origin/\" | sed 's/^[+ ]*//' | xargs -I % git branch -d % 2>/dev/null || true; \
	}; f"
	cp = cherry-pick
	wa = "!f() { repo_name=$(basename $(git rev-parse --show-toplevel)); branch_dir=$(echo $1 | tr '/' '-'); git worktree add ../${repo_name}-worktree/${branch_dir} -b $1; }; f"
	war = "!f() { repo_name=$(basename $(git rev-parse --show-toplevel)); branch_dir=$(echo $1 | tr '/' '-'); git worktree add ../${repo_name}-worktree/${branch_dir} origin/$1; }; f"
[ghq]
	root = ~/ghq
[core]
	editor = cursor --wait
	symlinks = true
	commentChar = >
[fetch]
	prune = true
[pull]
	rebase = true
[init]
	defaultBranch = main
[include]
	path = ~/.gitconfig.local
[commit]
	gpgsign = true
[github-nippou]
	user = MH4GF
[rerere]
	enabled = true
[gpg]
	program = /opt/homebrew/bin/gpg
